#! /bin/bash
#    Copyright (c) 2017 nerdopolis (or n3rdopolis) <bluescreen_avenger@verzion.net>
#
#    This file is just a free floating script for now..
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

#Get if root is a mountpont
mountpoint / -q
ISROOTMOUNT=$?

#Handle choots
if [[ $ISROOTMOUNT != 0 ]]
then
  echo "/ is not a mountpoint. Is / a chroot? Try to bindmount the chroot path onto itself"
  exit
fi
INITROOTFS=$(findmnt -vUrno FSROOT -N1 /)
THISROOTFS=$(findmnt -vUrno FSROOT /)
if [[ "$INITROOTFS" != "$THISROOTFS" ]]
then
  REPLACESTRING="$THISROOTFS"
else
  REPLACESTRING=/
fi
FSES=$(findmnt -vUPno MAJ:MIN,FSROOT,TARGET,SOURCE  | sed -e "s|$REPLACESTRING|/|g" -e "s|//|/|g" |sort -k1,1 -k2,2 -k3,3)
FSES=${FSES//MAJ:MIN/MAJ_MIN}

function getfilesysteminfo
{
unset DONE1FSES
ROOTFSROOT=/ #$(findmnt -vUrno FSROOT /)
IFS=$'\n'
for SEARCH1FS in $FSES
do
  HASBINDS=0
  unset DONE2FSES
  unset IFS
  eval "$SEARCH1FS"
  IFS=$'\n'
  SEARCH1SOURCE="$SOURCE"
  SEARCH1FSROOT="$FSROOT"
  SEARCH1TARGET="$TARGET"
  SEARCH1MAJMIN="$MAJ_MIN"
  
  FS1WASHANDLED=0
  IFS=$'\n'
  for DONE1FS in $DONE1FSES
  do
    if [[ "$DONE1FS" == "$MAJ_MIN" ]]
    then
      FS1WASHANDLED=1
      break
    fi
  done

  
  if [[ ("$SEARCH1FSROOT" == "$ROOTFSROOT") && ("$FS1WASHANDLED" == 0) ]]
  then
  DONE1FSES+="$MAJ_MIN"$'\n'
  IFS=$'\n'
  for SEARCH2FS in $FSES
  do
    unset IFS
    eval "$SEARCH2FS"
    IFS=$'\n'
    SEARCH2SOURCE=$SOURCE
    SEARCH2FSROOT=$FSROOT
    SEARCH2TARGET=$TARGET
    SEARCH2MAJMIN=$MAJ_MIN
    FS2WASHANDLED=0
    for DONE2FS in $DONE2FSES
    do
      if [[ $DONE2FS == $SEARCH2FS ]]
      then
        FS2WASHANDLED=1
        break
      fi
    done
    if [[ $1 == 1 ]]
    then
      if [[ ("$SEARCH1MAJMIN" == "$SEARCH2MAJMIN")  && ("$SEARCH1TARGET" != "$SEARCH2TARGET" )  && ("$FS2WASHANDLED" == 0 ) ]]
      then
        if [[ "$SEARCH1TARGET" == "$ROOTFSROOT" ]]
        then
          SEARCH1TARGET=""
        fi
        DONE2FSES+="$SEARCH2FS"$'\n'
        echo "BINDSOURCE=\"$SEARCH1TARGET$SEARCH2FSROOT\" BINDDEST=\"$SEARCH2TARGET\""
      fi
    fi
    
    if [[ $1 == 0 ]]
    then
      if [[ ($FS2WASHANDLED == 0) && ("$SEARCH1TARGET" == "$SEARCH2TARGET" ) ]]
      then
        DEVREGEX="/dev(/|)"
        TMPREGEX="/tmp(/|)"
        PROCREGEX="/proc(/|)"
        RUNREGEX="/run(/|)"
        SYSREGEX="/sys(/|)"
        if [[ (! "$SEARCH2TARGET" =~ $DEVREGEX) && (! "$SEARCH2TARGET" =~ $TMPREGEX) && (! "$SEARCH2TARGET" =~ $PROCREGEX) && (! "$SEARCH2TARGET" =~ $RUNREGEX) && (! "$SEARCH2TARGET" =~ $SYSREGEX) ]]
        then
          echo "DEST=\"$SEARCH2TARGET\""
        fi
      fi
    fi
  done

  fi
done | sort -k1,1
}

getfilesysteminfo 0
getfilesysteminfo 1
